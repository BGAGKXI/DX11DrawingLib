//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   row_major float4x4 View;           // Offset:    0 Size:    64
//   row_major float4x4 Projection;     // Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// PARAM                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
gs_4_0
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v[1][0].xyz
dcl_input v[1][1].xyz
dcl_input v[1][2].xy
dcl_input v[1][3].xyzw
dcl_input v[1][4].xyzw
dcl_temps 9
dcl_inputprimitive point 
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- ParticleStream; 
//   v[0][0].x <- In[0].Position.x; v[0][0].y <- In[0].Position.y; v[0][0].z <- In[0].Position.z; 
//   v[0][1].x <- In[0].Normal.x; v[0][1].y <- In[0].Normal.y; v[0][1].z <- In[0].Normal.z; 
//   v[0][2].x <- In[0].Size.x; v[0][2].y <- In[0].Size.y; 
//   v[0][3].x <- In[0].Color.x; v[0][3].y <- In[0].Color.y; v[0][3].z <- In[0].Color.z; v[0][3].w <- In[0].Color.w; 
//   v[0][4].x <- In[0].Param.x; v[0][4].y <- In[0].Param.y; v[0][4].z <- In[0].Param.z; v[0][4].w <- In[0].Param.w
//
#line 11 "D:\授業チEEタ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生Eɘver.2)\Shaders\PointSprite_gs.hlsl"
mul r0.xyzw, cb0[0].xyzw, v[0][0].xxxx
mul r1.xyzw, cb0[1].xyzw, v[0][0].yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[2].xyzw, v[0][0].zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- pos.x; r0.y <- pos.y; r0.z <- pos.z; r0.w <- pos.w

#line 13
mov r1.x, v[0][4].x  // r1.x <- rot

#line 14
sincos r2.x, null, r1.x  // r2.x <- s

#line 15
sincos null, r1.x, r1.x  // r1.x <- c

#line 16
mov r1.y, -r2.x
itof r1.zw, l(0, 0, 0, 0)
mul r3.x, l(0.500000), v[0][2].x
mul r3.xyzw, r1.xyzw, r3.xxxx  // r3.x <- right.x; r3.y <- right.y; r3.z <- right.z; r3.w <- right.w

#line 18
itof r2.zw, l(0, 0, 0, 0)
mul r1.y, l(0.500000), v[0][2].y
mov r2.y, r1.x
mul r1.xyzw, r1.yyyy, r2.xyzw  // r1.x <- up.x; r1.y <- up.y; r1.z <- up.z; r1.w <- up.w

#line 21
mov r2.xyzw, -r3.xyzw
add r2.xyzw, r0.xyzw, r2.xyzw
add r2.xyzw, r1.xyzw, r2.xyzw  // r2.x <- pos_left_top.x; r2.y <- pos_left_top.y; r2.z <- pos_left_top.z; r2.w <- pos_left_top.w

#line 22
mov r4.xyzw, -r3.xyzw
add r4.xyzw, r0.xyzw, r4.xyzw
mov r5.xyzw, -r1.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- pos_left_bottom.x; r4.y <- pos_left_bottom.y; r4.z <- pos_left_bottom.z; r4.w <- pos_left_bottom.w

#line 23
add r5.xyzw, r0.xyzw, r3.xyzw
add r5.xyzw, r1.xyzw, r5.xyzw  // r5.x <- pos_right_top.x; r5.y <- pos_right_top.y; r5.z <- pos_right_top.z; r5.w <- pos_right_top.w

#line 24
add r0.xyzw, r0.xyzw, r3.xyzw
mov r1.xyzw, -r1.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- pos_right_bottom.x; r0.y <- pos_right_bottom.y; r0.z <- pos_right_bottom.z; r0.w <- pos_right_bottom.w

#line 27
ftou r1.x, v[0][4].y  // r1.x <- type

#line 28
ftou r1.y, v[0][4].z  // r1.y <- komax

#line 29
ftou r1.z, v[0][4].w  // r1.z <- komay

#line 30
utof r1.w, r1.y
div r3.x, l(1.000000), r1.w  // r3.x <- w

#line 31
utof r1.z, r1.z
div r3.w, l(1.000000), r1.z  // r3.w <- h

#line 32
udiv null, r1.z, r1.x, r1.y
utof r1.z, r1.z
mul r6.x, r3.x, r1.z  // r6.x <- uv.x
udiv r1.x, null, r1.x, r1.y
utof r1.x, r1.x
mul r6.y, r3.w, r1.x  // r6.y <- uv.y

#line 36
mov r1.xyzw, v[0][3].xyzw  // r1.x <- Out.Color.x; r1.y <- Out.Color.y; r1.z <- Out.Color.z; r1.w <- Out.Color.w

#line 37
mul r7.xyzw, r2.xxxx, cb0[4].xyzw
mul r8.xyzw, r2.yyyy, cb0[5].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r2.zzzz, cb0[6].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r2.xyzw, r2.wwww, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r7.xyzw  // r2.x <- Out.Position.x; r2.y <- Out.Position.y; r2.z <- Out.Position.z; r2.w <- Out.Position.w

#line 38
itof r6.zw, l(0, 0, 0, 0)
add r6.zw, r6.zzzw, r6.xxxy  // r6.z <- Out.Tex.x; r6.w <- Out.Tex.y

#line 39
mov o0.xyzw, r2.xyzw
mov o1.xy, r6.zwzz
mov o2.xyzw, r1.xyzw
emit 

#line 41
mov r1.xyzw, v[0][3].xyzw

#line 42
mul r2.xyzw, r5.xxxx, cb0[4].xyzw
mul r7.xyzw, r5.yyyy, cb0[5].xyzw
add r2.xyzw, r2.xyzw, r7.xyzw
mul r7.xyzw, r5.zzzz, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r7.xyzw
mul r5.xyzw, r5.wwww, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r5.xyzw  // r2.x <- Out.Position.x; r2.y <- Out.Position.y; r2.z <- Out.Position.z; r2.w <- Out.Position.w

#line 43
itof r3.y, l(0)
add r5.xy, r3.xyxx, r6.xyxx  // r5.x <- Out.Tex.x; r5.y <- Out.Tex.y

#line 44
mov o0.xyzw, r2.xyzw
mov o1.xy, r5.xyxx
mov o2.xyzw, r1.xyzw
emit 

#line 47
mov r1.xyzw, v[0][3].xyzw

#line 48
mul r2.xyzw, r4.xxxx, cb0[4].xyzw
mul r5.xyzw, r4.yyyy, cb0[5].xyzw
add r2.xyzw, r2.xyzw, r5.xyzw
mul r5.xyzw, r4.zzzz, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r5.xyzw
mul r4.xyzw, r4.wwww, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r4.xyzw  // r2.x <- Out.Position.x; r2.y <- Out.Position.y; r2.z <- Out.Position.z; r2.w <- Out.Position.w

#line 49
itof r3.z, l(0)
add r3.yz, r3.zzwz, r6.xxyx  // r3.y <- Out.Tex.x; r3.z <- Out.Tex.y

#line 50
mov o0.xyzw, r2.xyzw
mov o1.xy, r3.yzyy
mov o2.xyzw, r1.xyzw
emit 

#line 53
mov r1.xyzw, v[0][3].xyzw

#line 54
mul r2.xyzw, r0.xxxx, cb0[4].xyzw
mul r4.xyzw, r0.yyyy, cb0[5].xyzw
add r2.xyzw, r2.xyzw, r4.xyzw
mul r4.xyzw, r0.zzzz, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r4.xyzw
mul r0.xyzw, r0.wwww, cb0[7].xyzw
add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- Out.Position.x; r0.y <- Out.Position.y; r0.z <- Out.Position.z; r0.w <- Out.Position.w

#line 55
add r2.xy, r3.xwxx, r6.xyxx  // r2.x <- Out.Tex.x; r2.y <- Out.Tex.y

#line 56
mov o0.xyzw, r0.xyzw
mov o1.xy, r2.xyxx
mov o2.xyzw, r1.xyzw
emit 

#line 58
cut 

#line 59
ret 
// Approximately 100 instruction slots used
