//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// NormalTexture                     texture  float4          2d             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Color.x; v1.y <- input.Color.y; v1.z <- input.Color.z; v1.w <- input.Color.w; 
//   v2.x <- input.wNormal.x; v2.y <- input.wNormal.y; v2.z <- input.wNormal.z; 
//   v3.x <- input.wPos.x; v3.y <- input.wPos.y; v3.z <- input.wPos.z; 
//   v4.x <- input.Tex.x; v4.y <- input.Tex.y; 
//   v5.x <- input.vTan.x; v5.y <- input.vTan.y; v5.z <- input.vTan.z; 
//   v6.x <- input.vBin.x; v6.y <- input.vBin.y; v6.z <- input.vBin.z; 
//   v7.x <- input.vNor.x; v7.y <- input.vNor.y; v7.z <- input.vNor.z; 
//   o2.x <- <main return value>.wPosition.x; o2.y <- <main return value>.wPosition.y; o2.z <- <main return value>.wPosition.z; o2.w <- <main return value>.wPosition.w; 
//   o1.x <- <main return value>.wNormal.x; o1.y <- <main return value>.wNormal.y; o1.z <- <main return value>.wNormal.z; o1.w <- <main return value>.wNormal.w; 
//   o0.x <- <main return value>.Color.x; o0.y <- <main return value>.Color.y; o0.z <- <main return value>.Color.z; o0.w <- <main return value>.Color.w
//
#line 9 "D:\授業チEEタ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生Eɘver.2)\Shaders\toGbuffer_normalMap_ps.hlsl"
dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v5.xyzx  // r0.x <- vx.x; r0.y <- vx.y; r0.z <- vx.z

#line 10
dp3 r0.w, v6.xyzx, v6.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v6.xyzx  // r1.x <- vy.x; r1.y <- vy.y; r1.z <- vy.z

#line 11
dp3 r0.w, v7.xyzx, v7.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v7.xyzx  // r2.x <- vz.x; r2.y <- vz.y; r2.z <- vz.z

#line 14
mov r3.x, r0.x  // r3.x <- vMat._m00
mov r3.y, r1.x  // r3.y <- vMat._m10
mov r3.z, r2.x  // r3.z <- vMat._m20
mov r4.x, r0.y  // r4.x <- vMat._m01
mov r4.y, r1.y  // r4.y <- vMat._m11
mov r4.z, r2.y  // r4.z <- vMat._m21
mov r2.x, r0.z  // r2.x <- vMat._m02
mov r2.y, r1.z  // r2.y <- vMat._m12
mov r2.z, r2.z  // r2.z <- vMat._m22

#line 17
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0
mov r0.xyz, r0.xyzx  // r0.x <- N.x; r0.y <- N.y; r0.z <- N.z

#line 18
mul r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r1.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r0.xyz, r0.xyzx, r1.xyzx

#line 21
dp3 r1.x, r0.xyzx, r3.xyzx
dp3 r1.y, r0.xyzx, r4.xyzx
dp3 r1.z, r0.xyzx, r2.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx

#line 24
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t0.xyzw, s0  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 26
mov r2.xyz, v3.xyzx  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z

#line 27
mov r1.xyzw, r1.xyzw  // r1.x <- Out.Color.x; r1.y <- Out.Color.y; r1.z <- Out.Color.z; r1.w <- Out.Color.w

#line 28
mov r0.xyz, r0.xyzx  // r0.x <- Out.wNormal.x; r0.y <- Out.wNormal.y; r0.z <- Out.wNormal.z
mov r0.w, l(1.000000)  // r0.w <- Out.wNormal.w

#line 29
mov r2.xyz, r2.xyzx  // r2.x <- Out.wPosition.x; r2.y <- Out.wPosition.y; r2.z <- Out.wPosition.z
mov r2.w, l(1.000000)  // r2.w <- Out.wPosition.w

#line 31
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r2.xyzw
ret 
// Approximately 40 instruction slots used
