//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16
//   float4 LightDir;                   // Offset:   16 Size:    16
//   float4 AmbientColor;               // Offset:   32 Size:    16
//   float4 EyePos;                     // Offset:   48 Size:    16
//
// }
//
// cbuffer CBPerFrame2
// {
//
//   float Density;                     // Offset:    0 Size:     4
//   float Distance;                    // Offset:    4 Size:     4 [unused]
//   float dummy1;                      // Offset:    8 Size:     4 [unused]
//   float dummy2;                      // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// FurSampler                        sampler      NA          NA             s1      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// FurTexture                        texture  float4          2d             t1      1 
// CBPerFrame                        cbuffer      NA          NA            cb2      1 
// CBPerFrame2                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[4], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   v2.x <- input.Color.x; v2.y <- input.Color.y; v2.z <- input.Color.z; v2.w <- input.Color.w; 
//   v3.x <- input.wNormal.x; v3.y <- input.wNormal.y; v3.z <- input.wNormal.z; 
//   v4.x <- input.wPos.x; v4.y <- input.wPos.y; v4.z <- input.wPos.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "D:\授業チEEタ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生Eɘver.2)\Shaders\furShader_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mov r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 9
mul r1.xy, v1.xyxx, cb3[0].xxxx
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t1.yzwx, s1
mov r0.w, r0.w  // r0.w <- alpha

#line 10
dp3 r1.x, v3.xyzx, v3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v3.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 11
mov r2.xyz, -v4.xyzx
add r2.xyz, r2.xyzx, cb2[3].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 12
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb2[1].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 15
mov r4.xyz, cb2[2].xyzx  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 18
mov r5.xyz, cb2[0].xyzx  // r5.x <- C.x; r5.y <- C.y; r5.z <- C.z

#line 19
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- Kd.x; r6.y <- Kd.y; r6.z <- Kd.z

#line 20
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx

#line 24 "D:\授業データ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生配布ver.2)\Shaders\Func.hlsli"
mov r7.xyz, -r3.xyzx
dp3 r1.w, r1.xyzx, r7.xyzx  // r1.w <- D

#line 25
mul r1.w, r1.w, l(0.500000)
add r1.w, r1.w, l(0.500000)  // r1.w <- D

#line 27
mul r7.xyz, r1.wwww, r5.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <HalfLambert return value>.x; r6.y <- <HalfLambert return value>.y; r6.z <- <HalfLambert return value>.z

#line 20 "D:\授業チEEタ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生Evver.2)\Shaders\furShader_ps.hlsl"
mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z

#line 23
itof r7.xyz, l(2, 2, 2, 0)  // r7.x <- Ks.x; r7.y <- Ks.y; r7.z <- Ks.z

#line 24
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, r7.xyzx

#line 48 "D:\授業データ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生配布ver.2)\Shaders\Func.hlsli"
mov r3.xyz, -r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- H.x; r2.y <- H.y; r2.z <- H.z

#line 50
dp3 r1.z, r2.xyzx, r1.xyzx
mov r1.xyz, r1.zzzz  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 51
itof r2.xyz, l(0, 0, 0, 0)
max r1.xyz, r1.xyzx, r2.xyzx

#line 52
mov r2.xyz, l(1.000000,1.000000,1.000000,0)
mul r1.xyz, r1.xyzx, r1.xyzx
mul r2.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 53
mul r1.xyz, r7.xyzx, r1.xyzx
mul r1.xyz, r5.xyzx, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 54
mov r1.xyz, r1.xyzx  // r1.x <- <BlinnPhongSpecular return value>.x; r1.y <- <BlinnPhongSpecular return value>.y; r1.z <- <BlinnPhongSpecular return value>.z

#line 24 "D:\授業チEEタ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生Evver.2)\Shaders\furShader_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 27
mov r0.w, r0.w  // r0.w <- color.w

#line 29
mul r0.xyzw, r0.xyzw, v2.xyzw
add r2.xyz, r4.xyzx, r6.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
itof r1.w, l(1)
mul o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 64 instruction slots used
