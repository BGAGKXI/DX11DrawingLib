//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame2
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16 [unused]
//   float4 LightDir;                   // Offset:   16 Size:    16
//   float4 AmbientColor;               // Offset:   32 Size:    16
//   float4 EyePos;                     // Offset:   48 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// RampSampler                       sampler      NA          NA             s1      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// RampTexture                       texture  float4          2d             t1      1 
// CBPerFrame2                       cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.wNormal.x; v1.y <- input.wNormal.y; v1.z <- input.wNormal.z; 
//   v2.x <- input.wPosition.x; v2.y <- input.wPosition.y; v2.z <- input.wPosition.z; 
//   v3.x <- input.Tex.x; v3.y <- input.Tex.y; 
//   v4.x <- input.Color.x; v4.y <- input.Color.y; v4.z <- input.Color.z; v4.w <- input.Color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 7 "D:\授業チEEタ\教材\3\シェーダプログラミングⅡ\ShaderProjectⅡ(学生Eɘver.2)\Shaders\ToonRendering_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v4.xyzw  // r0.x <- C.x; r0.y <- C.y; r0.z <- C.z; r0.w <- C.w

#line 10
dp3 r1.x, v1.xyzx, v1.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 11
mov r2.xyz, -v2.xyzx
add r2.xyz, r2.xyzx, cb2[3].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 12
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb2[1].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 15
mov r4.xyz, cb2[2].xyzx  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 19
mov r5.xyz, -r3.xyzx
dp3 r1.w, r5.xyzx, r1.xyzx
mul r1.w, r1.w, l(0.500000)
add r5.x, r1.w, l(0.500000)  // r5.x <- U

#line 20
itof r5.y, l(1)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t1.xyzw, s1
mov r5.xyz, r5.xyzx  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z

#line 25
dp3 r1.w, r3.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r6.xyz, r1.wwww, r1.xyzx
add r6.xyz, r3.xyzx, r6.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
dp3 r1.w, r6.xyzx, r2.xyzx
mul r1.w, r1.w, l(0.500000)
add r6.x, r1.w, l(0.500000)  // r6.x <- U

#line 26
itof r6.y, l(1)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t1.xyzw, s1
mov r6.xyz, r6.xyzx  // r6.x <- S.x; r6.y <- S.y; r6.z <- S.z

#line 27
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r7.xyz, l(1.000000,1.000000,1.000000,0)
mul r6.xyz, r6.xyzx, r6.xyzx
mul r6.xyz, r6.xyzx, r6.xyzx
mul r7.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r6.xyzx, r6.xyzx
mul r6.xyz, r6.xyzx, r6.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)

#line 31
dp3 r1.x, r1.xyzx, r2.xyzx
max r1.x, r1.x, l(0.000000)
mov r1.x, -r1.x
add r1.x, r1.x, l(1.000000)  // r1.x <- Rim

#line 32
dp3 r1.y, r3.xyzx, r2.xyzx
itof r1.z, l(0)
max r1.y, r1.z, r1.y  // r1.y <- Ratio

#line 33
mul r1.x, r1.y, r1.x
itof r1.y, l(1)
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.xyzw, s1
mov r1.xyz, r1.xxxx  // r1.x <- R.x; r1.y <- R.y; r1.z <- R.z

#line 35
add r2.xyz, r4.xyzx, r5.xyzx
add r2.xyz, r6.xyzx, r2.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx

#line 36
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 63 instruction slots used
